"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _reference = require("../utilities/reference");
var _customEventTypes = require("../customEventTypes");
var dropElement = null;
Object.assign(globalThis, {
    dropElement: dropElement
});
function drop(event, element, dragElement, aborted, done) {
    var customEventType = _customEventTypes.DROP_CUSTOM_EVENT_TYPE;
    this.callCustomHandlersAsync(customEventType, event, element, dragElement, aborted, done);
}
function dragOut(dragElement) {
    var customEventType = _customEventTypes.DRAG_OUT_CUSTOM_EVENT_TYPE;
    this.callCustomHandlers(customEventType, dragElement);
}
function dragOver(dragElement) {
    var customEventType = _customEventTypes.DRAG_OVER_CUSTOM_EVENT_TYPE;
    this.callCustomHandlers(customEventType, dragElement);
}
function enableDrop() {
    this.onMouseOut(mouseOutHandler, this);
    this.onMouseOver(mouseOverHandler, this);
}
function disableDrop() {
    this.offMouseOut(mouseOutHandler, this);
    this.offMouseOver(mouseOverHandler, this);
}
function onCustomDrop(dropCustomHandler, element) {
    var customEventType = _customEventTypes.DROP_CUSTOM_EVENT_TYPE, customHandler = dropCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomDrop(dropCustomHandler, element) {
    var customEventType = _customEventTypes.DROP_CUSTOM_EVENT_TYPE, customHandler = dropCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomDragOut(dragOutCustomHandler, element) {
    var customEventType = _customEventTypes.DRAG_OUT_CUSTOM_EVENT_TYPE, customHandler = dragOutCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomDragOut(dragOutCustomHandler, element) {
    var customEventType = _customEventTypes.DRAG_OUT_CUSTOM_EVENT_TYPE, customHandler = dragOutCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomDragOver(dragOverCustomHandler, element) {
    var customEventType = _customEventTypes.DRAG_OVER_CUSTOM_EVENT_TYPE, customHandler = dragOverCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomDragOver(dragOverCustomHandler, element) {
    var customEventType = _customEventTypes.DRAG_OVER_CUSTOM_EVENT_TYPE, customHandler = dragOverCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
var _default = {
    drop: drop,
    dragOut: dragOut,
    dragOver: dragOver,
    enableDrop: enableDrop,
    disableDrop: disableDrop,
    onCustomDrop: onCustomDrop,
    offCustomDrop: offCustomDrop,
    onCustomDragOut: onCustomDragOut,
    offCustomDragOut: offCustomDragOut,
    onCustomDragOver: onCustomDragOver,
    offCustomDragOver: offCustomDragOver
};
function mouseOutHandler(event, element) {
    var dragElement = globalThis.dragElement;
    if (dragElement !== null) {
        var dropElement = null; ///
        Object.assign(globalThis, {
            dropElement: dropElement
        });
        this.dragOut(dragElement);
    }
    event.stopPropagation();
}
function mouseOverHandler(event, element) {
    var dragElement = globalThis.dragElement;
    if (dragElement !== null) {
        var dropElement = this, dragElementIgnoresDropElement = (0, _reference.checkDragElementIgnoresDropElement)(dragElement, dropElement);
        if (dragElementIgnoresDropElement) {
            return;
        }
        Object.assign(globalThis, {
            dropElement: dropElement
        });
        this.dragOver(dragElement);
    }
    event.stopPropagation();
}

//# sourceMappingURL=data:application/json;base64,